generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  files     File[]
  folders   Folder[]
}

model Folder {
  id         Int         @id @default(autoincrement())
  name       String
  ownerId    Int
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  files      File[]
  owner      User        @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  shareLinks ShareLink[]
}

model File {
  id           Int      @id @default(autoincrement())
  folderId     Int
  ownerId      Int
  filename     String
  originalName String
  mimeType     String
  size         Int
  storagePath  String
  uploadedAt   DateTime @default(now())
  folder       Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  owner        User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
}

model ShareLink {
  id        String   @id @default(uuid())
  folderId  Int
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  folder    Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
}

model Session {
  id        String    @id @default(cuid())
  sid       String    @unique
  data      Json
  expiresAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
